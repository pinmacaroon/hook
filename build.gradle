buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath 'com.guardsquare:proguard-gradle:7.1.0'
	}
}
plugins {
	id 'fabric-loom' version '1.10-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	mavenCentral()
}

configurations {
	extraLibs
}

fabricApi {
	configureDataGeneration {
		client = true
	}
}



dependencies {
	// To change the versions see the gradle.properties file
	minecraft "net.minecraft:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	//implementation 'com.googlecode.json-simple:json-simple:1.1.1'
	/*
	implementation 'com.discord4j:discord4j-core:3.2.7'
	include "com.discord4j:discord4j-core:3.2.7"

	 */
	extraLibs group: 'com.discord4j', name: 'discord4j-core', version: '3.2.7'

	configurations.implementation.extendsFrom(configurations.extraLibs)
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {

	duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
	inputs.property "archivesName", project.base.archivesName

	/*
	manifest {
		attributes 'Main-Class': 'com.github.pinmacaroon.dchook.Hook'
	}

	from {
		configurations.runtimeClasspath.collect {it.isDirectory() ? it: zipTree(it)}
	}*/
	from {
		configurations.extraLibs.collect { it.isDirectory() ? it : zipTree(it) }
	}

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {

		//implementation 'com.googlecode.json-simple:json-simple:1.1.1'
	}
}